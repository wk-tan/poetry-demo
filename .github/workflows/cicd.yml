name: Release

on:
  workflow_dispatch:

jobs:
  unittest:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: "Check out GitHub repository"
        uses: actions/checkout@v3

      - name: "Set up Python 3.9"
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: "Set up Poetry"
        uses: abatilo/actions-poetry@v2.1.0
        with:
          poetry-version: 1.2.2

      - name: "Configure Poetry"
        run: |
          poetry config virtualenvs.in-project true

      - name: "Install dependencies"
        run: |
          poetry install --with dev

      # - name: "Test with pytest"
      #   run: |
      #     python -m poetry run python -m pytest -v tests

  semantic-release:
    needs: unittest
    runs-on: ubuntu-latest
    outputs:
      released_version: ${{ steps.release.outputs.RELEASED_VERSION }}
    steps:
      - name: "Check out GitHub repository"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.ADMIN_GITHUB_PAT }}

      - name: "Set up Python 3.9"
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: "Set up Poetry"
        uses: abatilo/actions-poetry@v2.1.0
        with:
          poetry-version: 1.2.2

      - name: "Configure Poetry"
        run: |
          poetry config virtualenvs.in-project true

      - name: "Install dev dependencies"
        run: |
          poetry install --only dev

      - name: "Semantic release"
        id: release
        env:
          GH_TOKEN: ${{ secrets.ADMIN_GITHUB_PAT }}
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          poetry run semantic-release publish --verbosity=DEBUG

          echo "RELEASED_VERSION $(poetry run semantic-release print-version --current)"
          echo "RELEASED_VERSION=$(poetry run semantic-release print-version --current)" >> $GITHUB_OUTPUT

  build-and-deploy:
    needs: [unittest, semantic-release]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: "Check out GitHub repository"
        uses: actions/checkout@v3
        with:
          ref: v${{ needs.semantic-release.outputs.released_version }}
          persist-credentials: false

      - name: "Set up Python 3.9"
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: "Install toml-cli"
        run: pip install toml-cli

      - name: "Get release tag"
        id: get_release_tag
        run: |
          echo "RELEASE TAG $(toml get --toml-path pyproject.toml tool.poetry.version)"
